What happens when you initialize a repository? Why do you need to do it?
- When a repository is initialize, git will create a repository on that directory. This is needed to create commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?
- Staging area is the intermediate area between the working directory and the repository, where user adds files or changes to
  it before commiting them into the repository. The staging area is useful because you can check, add or remove items before
  you decide to commit it.

How can you use the staging area to make sure you have one commit per logical change?
- I can do this by using git diff or git diff --staged to compare the changes between working directory, staging area and
  repository.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- Branches would be helpful in situation when you want to introduce a new feature/change but doesn't want to completely
  abandon the old features yet. Branches would help to keep the 2 versions organized and neat.

How do the diagrams help you visualize the branch structure?
- Drawing diagrams will give a clear picture of the branch structure, making it less confusing.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
- Mergin two branches will create a new commit with features from the two branches. The diagram is to let us visualize it.